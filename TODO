Corentin :
- Essayer de gérer les redirections avec ; -- Done
- Gérer les cas d'erreurs des redirections -- Ongoing
- Corriger le cas où cmd > file1 file2 : Écrire dans file1 et pas dans file2 (file 2 reste un simple literal) -- Done

Alexandre :
- Check execve (./) -- Done
- Vérifier que toutes les commandes sont redirigées -- Done
- Corriger la cmd export (MYVAR="Bonjour" ne fonctionne pas et peut crash à cause d'un free) -- Done
- Unset double free (unset PATH) -- Done

Adrien : 
- Régler segfault variables qui n'existent pas -- Done
- Gérer $? -- Done
- changer l'environement lors d'un cd (PWD) -- Done
- Remplacer les $variables petit à petit et non pas une fois dès le début -- Done
- Remplacer le type apres la traduction d 'une variable ( ex : export ok=echo   $ok lol) -- Done

?? :
- Transformer les commandes qu'il ne faut pas gérer en cmd_instr (Une seule par bloc) -- Done
- Gérer les signaux (CTRL-C, CTRL-D, etc...) -- Done (?)
    - Gérer CTRL-D -- Done
    - Gérer CTRL-C -- Done
    - Gérer CTRL-\ -- A FAIRE
- Gérer les pipes et redirections pour les commandes non-obligatoires. (Obligation d'utiliser des dup2)  -- Done
    - Corriger la boucle infinie avec certaines commandes (grep test << end) -- Done
    - Corriger l'output des cmd avec pipe (echo wow > test | cat) -- Done



Ce qu'il reste :
    - ctrl-c non géré dans les heredoc;
    pour gerer ca mettre le process (la boucle de readline pour le heredoc) dans un child avec fork() et call signal(SIGINT, SIG_DFL) seulement dans l'enfant
    - variables d'environement non gerées dans le heredoc
    - la retval ($?) de minishell est 1 au lieu de 0 quand on vient de lancer le shell
    - la retval doit etre set a 1 quand tu ctrl-c --done
    - ctrl-d et exit doivent print exit mais ca c'est pas encore trop grave
    - votre retval donne pas la bonne valeur. (example: base64 -f  donne la retval 64, mais 2 chez vous) pour regler ca tu passe la valeur que tu envoie a waitpid(_, &ici, _) dans WEXITSTATUS(ici)
    - export sans arguments ne fonctionne pas
    - echo hello | exit 19 ne devrai pas faire exit minishell et devrai set la retval du press a 19
    - export AA=b | echo $AA  segfault
    - cat | cat | ls  pas le meme comportement que bash, mais c'est un peu un cas mystique
    -   minishell > echo abc > x
        minishell > echo xyz | < x cat -e
    n'a pas le meme comportement que bash
    - echo $$PWD: segfault --done
    - echo $PW : imprime le PWD --done
    - exit 10 ne set pas la valeur de ret. de minishell
    - echo hello | hgiulhgul | echo lol  pas le mm comportement -- Done

    minishell > unset PWD
    minishell > mkdir hello
    minishell > cd hello/
    -> segfault
    - proteger les fork(), pipe(), dup2()