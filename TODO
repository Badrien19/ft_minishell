Ce qu'il reste :
    Corentin :
        - Gérer les cas d'erreurs des redirections -- Ongoing
        - Ctrl-c non géré dans les heredoc 
                Pour gerer ca mettre le process (la boucle de readline pour le heredoc) dans un child avec fork() et call signal(SIGINT, SIG_DFL) seulement dans l'enfant
        - Variables d'environement non gerées dans le heredoc -- Done
        - echo hello | hgiulhgul | echo lol  pas le mm comportement -- Done
        "minishell > unset PWD
         minishell > mkdir hello
         minishell > cd hello/" -> segfault -- Done
        - "minishell > echo xyz | < x cat -e" -> Segfault -- Done

    Adrien :
        - La retval ($?) de minishell est 1 au lieu de 0 quand on vient de lancer le shell --done
        - echo $$PWD: segfault --Done
        - segfault quand $, $PWD, $PATH,... --done

    Alex :
        - Export sans arguments ne fonctionne pas --Done 
        - Echo hello | exit 19 ne devrait pas faire exit minishell et devrai set la retval du press a 19 -- Done
        - Export AA=b | echo $AA  segfault --Done
        - echo $PW : imprime le PWD -- Done
        - exit 10 ne set pas la valeur de ret. de minishell -- Done

    ?? :
        - Gérer CTRL-\
        - La retval doit etre set a 1 quand tu ctrl-c -- Done
        - Ctrl-D et exit doivent print exit mais ca c'est pas encore trop grave -- Done
        - Votre retval donne pas la bonne valeur. (Example: base64 -f  donne la retval 64, mais 2 chez vous) pour regler ca tu passe la valeur que tu envoie a waitpid(_, &ici, _) dans WEXITSTATUS(ici) -- Done
        - cat | cat | ls  pas le meme comportement que bash, mais c'est un peu un cas mystique
        - "echo abc > x" n'a pas le meme comportement que bash -- Done
        - "echo xyz | < x cat -e" n'a pas le meme comportement que bash -- Done
        - Protéger les fork(), pipe(), dup2() --Done

